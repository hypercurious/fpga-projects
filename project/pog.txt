module VGA(reset, clk, scancode, flag, xcnt, ycnt, r, g, b);
	input 		reset, clk, flag;
	input      [7:0]scancode;
	input      [9:0]xcnt;
	input  	   [8:0]ycnt;
	output reg [2:0]r, g, b;
	
	reg i, ii, iii, iv, v, vi, vii, viii, ix;
	
	always @(posedge clk or posedge reset) begin
		if (reset) begin
			i <= 0; ii <= 0; iii <= 0; iv <= 0; v <= 0; vi <= 0; vii <= 0; viii <= 0; ix <= 0;
		end
		else if (flag) begin
			
		end
	end
	
endmodule

	output [2:0]r, g, b;
	VGA vga(reset, clk25, scancode, flag, xcnt, ycnt, r, g, b);
	
net r<2> loc=b1;
net r<1> loc=d6;
net r<0> loc=c8;
net g<2> loc=c3;
net g<1> loc=a5;
net g<0> loc=a8;
net b<2> loc=d5;
net b<1> loc=e7;
net b<0> loc=c9;

			if (scancode==8'h25) begin
				if (iv) r <= 3'b111;
			end
			if (scancode==8'h2e) begin
				if (v) r <= 3'b111;
			end
			if (scancode==8'h36) begin
				if (vi) r <= 3'b111;
			end
			if (scancode==8'h3d) begin
				if (vii) r <= 3'b111;
			end
			if (scancode==8'h3e) begin
				if (viii) r <= 3'b111;
			end
			if (scancode==8'h46) begin
				if (ix) r <= 3'b111;
			end
			
			i <= (xcnt>15) && (xcnt<48);
			ii <= (xcnt>47) && (xcnt<80);
			iii <= (xcnt>79) && (xcnt<112);
			iv <= (xcnt>15) && (xcnt<48);
			v <= (xcnt>47) && (xcnt<80);
			vi <= (xcnt>79) && (xcnt<112);
			vii <= (xcnt>15) && (xcnt<48);
			viii <= (xcnt>47) && (xcnt<80);
			ix <= (xcnt>79) && (xcnt<112);
			
--------------------------------------------------------------------------------------------------

	reg [3:0]region;
	
	always @(posedge clk or posedge reset) begin
		if (reset) begin
			region <= 4'd0;
		end
		else begin
			region <= (xcnt>160 && xcnt<373 && ycnt>49 && ycnt<182) ? 4'd1 : 
					  (xcnt>372 && xcnt<586 && ycnt>49 && ycnt<182) ? 4'd2 : 
					  (xcnt>585 && xcnt<799 && ycnt>49 && ycnt<182) ? 4'd3 : 
					  (xcnt>160 && xcnt<373 && ycnt>181 && ycnt<315) ? 4'd4 : 
					  (xcnt>372 && xcnt<586 && ycnt>181 && ycnt<315) ? 4'd5 : 
					  (xcnt>585 && xcnt<799 && ycnt>181 && ycnt<315) ? 4'd6 : 
					  (xcnt>160 && xcnt<373 && ycnt>314 && ycnt<448) ? 4'd7 : 
					  (xcnt>372 && xcnt<586 && ycnt>314 && ycnt<448) ? 4'd8 : 
					  (xcnt>585 && xcnt<799 && ycnt>314 && ycnt<448) ? 4'd9 : 4'd0;
		end
	end

	always @(negedge flag or posedge reset) begin
		if (reset) begin
			{r, g, b} <= 9'd0;
		end
		else if (flag) begin
			if (scancode==8'h16) begin
				if (region==4'd1) r <= 3'd3;
			end
			if (scancode==8'h1e) begin
				if (region==4'd2) g <= 3'd3;
			end
			if (scancode==8'h26) begin
				if (region==4'd3) b <= 3'd3;
			end
			if (scancode==8'h25) begin
				if (region==4'd4) r <= 3'd5;
			end
			if (scancode==8'h2e) begin
				if (region==4'd5) g <= 3'd5;
			end
			if (scancode==8'h36) begin
				if (region==4'd6) b <= 3'd5;
			end
			if (scancode==8'h3d) begin
				if (region==4'd7) r <= 3'd7;
			end
			if (scancode==8'h3e) begin
				if (region==4'd8) g <= 3'd7;
			end
			if (scancode==8'h46) begin
				if (region==4'd9) b <= 3'd7;
			end
		end
	end
	
	--------------------------------------------------------------------------------
	
		reg [8:0]color;
	
		always @(negedge flag or posedge reset) begin
		if (reset) color <= 9'd0;
		else if (flag) begin
			if (scancode==8'h16) begin
				color <= (scancode==2d) ? 9'b111000000 :
						 (scancode==34) ? 9'b000111000 :
						 (scancode==32) ? 9'b000111000 :
			end
			if (scancode==8'h1e) begin
				
			end
			if (scancode==8'h26) begin
				
			end
			if (scancode==8'h25) begin
				
			end
			if (scancode==8'h2e) begin
				
			end
			if (scancode==8'h36) begin
				
			end
			if (scancode==8'h3d) begin
				
			end
			if (scancode==8'h3e) begin
				
			end
			if (scancode==8'h46) begin
				
			end
		end
	end
	
	--------------------------------------------------------------------------------
	
	((xcnt>10'd160 && xcnt<10'd373) && (ycnt>49 && ycnt<182)) ? 9'b011000000 :
					   ((xcnt>10'd372 && xcnt<10'd586) && (ycnt>49 && ycnt<182)) ? 9'b000011000 :
					   ((xcnt>10'd585 && xcnt<10'd799) && (ycnt>49 && ycnt<182)) ? 9'b000000011 :
					   ((xcnt>10'd160 && xcnt<10'd373) && (ycnt>181 && ycnt<315)) ? 9'b101000000 :
					   ((xcnt>10'd372 && xcnt<10'd586) && (ycnt>181 && ycnt<315)) ? 9'b000101000 :
					   ((xcnt>10'd585 && xcnt<10'd799) && (ycnt>181 && ycnt<315)) ? 9'b000000101 :
					   ((xcnt>10'd160 && xcnt<10'd373) && (ycnt>314 && ycnt<448)) ? 9'b111000000 :
					   ((xcnt>10'd372 && xcnt<10'd586) && (ycnt>314 && ycnt<448)) ? 9'b000111000 :
					   ((xcnt>10'd585 && xcnt<10'd799) && (ycnt>314 && ycnt<448)) ? 9'b000000111 : 9'b000000000;
					   
	--------------------------------------------------------------------------------			   
					   
	reg  [8:0]c1, c2, c3, c4, c5, c6, c7, c8, c9;
	
	always @(posedge clk or posedge reset) begin
		if (reset) begin
			{c1, c2, c3, c4, c5, c6, c7, c8, c9} <= 27'd0;
		end
		else if (flag) begin
			if (scancode==8'h16) begin r1 <= 1'd1; as <= 1; end
			if (scancode==8'h16) begin r2 <= 1'd1; as <= 1; end
			if (scancode==8'h16) begin r3 <= 1'd1; as <= 1; end
			if (scancode==8'h16) begin r4 <= 1'd1; as <= 1; end
			if (scancode==8'h16) begin r5 <= 1'd1; as <= 1; end
			if (scancode==8'h16) begin r6 <= 1'd1; as <= 1; end
			if (scancode==8'h16) begin r7 <= 1'd1; as <= 1; end
			if (scancode==8'h16) begin r8 <= 1'd1; as <= 1; end
			if (scancode==8'h16) begin r9 <= 1'd1; as <= 1; end
		end
		else if (scancode==8'h2d || scancode==8'h34 || scancode==8'32) 
				if (scancode==8'h16) begin
					c1 <= (scancode==8'h2d) ? 9'b111000000 :
						  (scancode==8'h34) ? 9'b000111000 :
						  (scancode==8'h32) ? 9'b000000111 : 9'd0;
				end
				if (rflag==4'd2) begin
					c2 <= (scancode==8'h2d) ? 9'b111000000 :
						  (scancode==8'h34) ? 9'b000111000 :
						  (scancode==8'h32) ? 9'b000000111 : 9'd0;
				end
				if (rflag==4'd3) begin
					c3 <= (scancode==8'h2d) ? 9'b111000000 :
						  (scancode==8'h34) ? 9'b000111000 :
						  (scancode==8'h32) ? 9'b000000111 : 9'd0;
				end
				if (rflag==4'd4) begin
					c4 <= (scancode==8'h2d) ? 9'b111000000 :
						  (scancode==8'h34) ? 9'b000111000 :
						  (scancode==8'h32) ? 9'b000000111 : 9'd0;
				end
				if (rflag==4'd5) begin
					c5 <= (scancode==8'h2d) ? 9'b111000000 :
						  (scancode==8'h34) ? 9'b000111000 :
						  (scancode==8'h32) ? 9'b000000111 : 9'd0;
				end
				if (rflag==4'd6) begin
					c6 <= (scancode==8'h2d) ? 9'b111000000 :
						  (scancode==8'h34) ? 9'b000111000 :
						  (scancode==8'h32) ? 9'b000000111 : 9'd0;
				end
				if (rflag==4'd7) begin
					c7 <= (scancode==8'h2d) ? 9'b111000000 :
						  (scancode==8'h34) ? 9'b000111000 :
						  (scancode==8'h32) ? 9'b000000111 : 9'd0;
				end
				if (rflag==4'd8) begin
					c8 <= (scancode==8'h2d) ? 9'b111000000 :
						  (scancode==8'h34) ? 9'b000111000 :
						  (scancode==8'h32) ? 9'b000000111 : 9'd0;
				end
				if (rflag==4'd9) begin
					c9 <= (scancode==8'h2d) ? 9'b111000000 :
						  (scancode==8'h34) ? 9'b000111000 :
						  (scancode==8'h32) ? 9'b000000111 : 9'd0;
				end
		end
	end
	
	
	
	
	
	
			if (scancode==8'h1e) begin
				r2 <= 1; rflag <= 1; 
			end
			if (scancode==8'h26) begin
				r3 <= 1; rflag <= 1; 
			end
			if (scancode==8'h25) begin
				r4 <= 1; rflag <= 1; 
			end
			if (scancode==8'h2e) begin
				r5 <= 1; rflag <= 1; 
			end
			if (scancode==8'h36) begin
				r6 <= 1; rflag <= 1; 
			end
			if (scancode==8'h3d) begin
				r7 <= 1; rflag <= 1; 
			end
			if (scancode==8'h3e) begin
				r8 <= 1; rflag <= 1; 
			end
			if (scancode==8'h46) begin
				r9 <= 1; rflag <= 1; 
			end
			
			
			
				always @(posedge clk) begin
		if (r1) begin
			c1 <= (scancode==8'h2d) ? 9'b111000000 :
				  (scancode==8'h34) ? 9'b000111000 :
				  (scancode==8'h32) ? 9'b000000111 : 9'd0;
		end
		if (r2) begin
			c2 <= (scancode==8'h2d) ? 9'b111000000 :
				  (scancode==8'h34) ? 9'b000111000 :
				  (scancode==8'h32) ? 9'b000000111 : 9'd0;
		end
		if (r3) begin
			c3 <= (scancode==8'h2d) ? 9'b111000000 :
				  (scancode==8'h34) ? 9'b000111000 :
				  (scancode==8'h32) ? 9'b000000111 : 9'd0;
		end
		if (r4) begin
			c4 <= (scancode==8'h2d) ? 9'b111000000 :
				  (scancode==8'h34) ? 9'b000111000 :
				  (scancode==8'h32) ? 9'b000000111 : 9'd0;
		end
		if (r5) begin
			c5 <= (scancode==8'h2d) ? 9'b111000000 :
				  (scancode==8'h34) ? 9'b000111000 :
				  (scancode==8'h32) ? 9'b000000111 : 9'd0;
		end
		if (r6) begin
			c6 <= (scancode==8'h2d) ? 9'b111000000 :
				  (scancode==8'h34) ? 9'b000111000 :
				  (scancode==8'h32) ? 9'b000000111 : 9'd0;
		end
		if (r7) begin
			c7 <= (scancode==8'h2d) ? 9'b111000000 :
				  (scancode==8'h34) ? 9'b000111000 :
				  (scancode==8'h32) ? 9'b000000111 : 9'd0;
		end
		if (r8) begin
			c8 <= (scancode==8'h2d) ? 9'b111000000 :
				  (scancode==8'h34) ? 9'b000111000 :
				  (scancode==8'h32) ? 9'b000000111 : 9'd0;
		end
		if (r9) begin
			c9 <= (scancode==8'h2d) ? 9'b111000000 :
				  (scancode==8'h34) ? 9'b000111000 :
				  (scancode==8'h32) ? 9'b000000111 : 9'd0;
		end
	end
	
	
			if (r2 or r3 or r4 or r5 or r6 or r7 or r8 or r9) r1 <= 0;
			if (r1 or r3 or r4 or r5 or r6 or r7 or r8 or r9) r2 <= 0;
			if (r1 or r2 or r4 or r5 or r6 or r7 or r8 or r9) r3 <= 0;
			if (r1 or r2 or r3 or r5 or r6 or r7 or r8 or r9) r4 <= 0;
			if (r1 or r2 or r3 or r4 or r6 or r7 or r8 or r9) r5 <= 0;
			if (r1 or r2 or r3 or r4 or r5 or r7 or r8 or r9) r6 <= 0;
			if (r1 or r2 or r3 or r4 or r5 or r6 or r8 or r9) r7 <= 0;
			if (r1 or r2 or r3 or r4 or r5 or r6 or r7 or r9) r8 <= 0;
			if (r1 or r2 or r3 or r4 or r5 or r6 or r7 or r8) r9 <= 0;